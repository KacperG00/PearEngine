#vertex_shader
#version 130

in vec3 vsPosition;
in vec4 vsColor;
in float vsTextureID;
in vec2 vsTextureCoords;

out vec4 fsColor;
out float fsTextureID;
out vec2 fsTextureCoords;

void main()
{
	gl_Position = vec4( vsPosition, 1.0f );
	
	fsColor = vsColor;
	fsTextureID = vsTextureID;
	fsTextureCoords = vsTextureCoords;
}

#fragment_shader
#version 130

in vec4 fsColor;
in float fsTextureID;
in vec2 fsTextureCoords;

out vec4 color;

uniform sampler2D textures[16];

void main()
{
	if( fsTextureID > 0.0f )
	{
		int tid = int(fsTextureID);
		switch( tid )
		{
			case 1: color = texture(textures[0], vec2(fsTextureCoords.x, 1.0f - fsTextureCoords.y)); break;
			case 2: color = texture(textures[1], vec2(fsTextureCoords.x, 1.0f - fsTextureCoords.y)); break;
			case 3: color = texture(textures[2], vec2(fsTextureCoords.x, 1.0f - fsTextureCoords.y)); break;
			case 4: color = texture(textures[3], vec2(fsTextureCoords.x, 1.0f - fsTextureCoords.y)); break;
			case 5: color = texture(textures[4], vec2(fsTextureCoords.x, 1.0f - fsTextureCoords.y)); break;
			case 6: color = texture(textures[5], vec2(fsTextureCoords.x, 1.0f - fsTextureCoords.y)); break;
			case 7: color = texture(textures[6], vec2(fsTextureCoords.x, 1.0f - fsTextureCoords.y)); break;
			case 8: color = texture(textures[7], vec2(fsTextureCoords.x, 1.0f - fsTextureCoords.y)); break;
			case 9: color = texture(textures[8], vec2(fsTextureCoords.x, 1.0f - fsTextureCoords.y)); break;
			case 10: color = texture(textures[9], vec2(fsTextureCoords.x, 1.0f - fsTextureCoords.y)); break;
			case 11: color = texture(textures[10], vec2(fsTextureCoords.x, 1.0f - fsTextureCoords.y)); break;
			case 12: color = texture(textures[11], vec2(fsTextureCoords.x, 1.0f - fsTextureCoords.y)); break;
			case 13: color = texture(textures[12], vec2(fsTextureCoords.x, 1.0f - fsTextureCoords.y)); break;
			case 14: color = texture(textures[13], vec2(fsTextureCoords.x, 1.0f - fsTextureCoords.y)); break;
			case 15: color = texture(textures[14], vec2(fsTextureCoords.x, 1.0f - fsTextureCoords.y)); break;
			case 16: color = texture(textures[15], vec2(fsTextureCoords.x, 1.0f - fsTextureCoords.y)); break;
		}
	}
	else
	{
		color = fsColor;
	}
}
